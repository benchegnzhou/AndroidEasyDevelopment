apply plugin: 'com.android.application'


apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-noarg'
apply plugin: 'kotlin-allopen'
apply plugin: 'kotlin-android-extensions'


apply plugin: 'com.jakewharton.butterknife'



//通用配置引入
apply from: '../commonConfig.gradle'

android {
    kapt {
        arguments {
            arg("AROUTER_MODULE_NAME", project.getName())
        }
    }

    compileSdkVersion android.compileSdkVersion

    defaultConfig {
        applicationId "com.ztsc.moudleuseguide"
        minSdkVersion android.minSdkVersion
        targetSdkVersion android.targetSdkVersion
        versionCode android.versionCode
        versionName android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [
                JPUSH_PKGNAME : "com.ztsc.house",
                JPUSH_APPKEY  : "3742107ded35927fb745fbee", //Portal上注册的包名对应的 appKey.
                APPLICATION_ID: applicationId
                //JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]

        //添加如下配置就OK了
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
        //版本名后面添加一句话，意思就是flavor dimension 它的维度就是该版本号，这样维度就是都是统一的了
        flavorDimensions "versionCode"

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }



    }
    signingConfigs {
        release {
            storeFile file(signingRelease.storeFile)
            storePassword signingRelease.storePassword
            keyAlias signingRelease.keyAlias
            keyPassword signingRelease.keyPassword
        }
    }


    buildTypes {

        debug {
            debuggable true
            minifyEnabled false
            //崩溃抓取
            buildConfigField "boolean", "CRASH_CATCH_ENABLE", "false"
            buildConfigField "boolean", "DEBUG_ENABLE", "true"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        release {
            debuggable true
            minifyEnabled false
            //崩溃抓取
            buildConfigField "boolean", "CRASH_CATCH_ENABLE", "false"
            buildConfigField "boolean", "DEBUG_ENABLE", "true"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        check {
            debuggable true
            minifyEnabled false
            //崩溃抓取
            buildConfigField "boolean", "CRASH_CATCH_ENABLE", "false"
            buildConfigField "boolean", "DEBUG_ENABLE", "true"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }


    productFlavors {

        _360 {}

    }
    // 渠道参数xml清单文件替换
    productFlavors.all {
        flavor ->
            flavor.manifestPlaceholders = [CHANNEL_VALUE      : name,
                                           JPUSH_CHANNEL      : name,
                                           JPUSH_CHANNEL_VALUE: name]
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation dependenciesLib.core_ktx

    implementation dependenciesLib.appcompat_androidx
    implementation dependenciesLib.constraintlayout
    testImplementation dependenciesLib.junit
    testImplementation dependenciesLib.junit_android
    testImplementation dependenciesLib.espresso_android

    //kotlin 依赖
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"


    implementation project(':commonCoreUtil')
    implementation project(':commonuimoudle')

    implementation dependenciesLib.BaseRecyclerViewAdapterHelper


//    api "org.jetbrains.anko:anko-commons:$anko_version"
//    api "org.jetbrains.anko:anko-sdk15:$anko_version"
//    api "org.jetbrains.anko:anko-sdk15-listeners:$anko_version"

    implementation dependenciesLib.design

    // 动画解析库：https://github.com/airbnb/lottie-android
    // 动画资源：https://lottiefiles.com、https://icons8.com/animated-icons
    implementation 'com.airbnb.android:lottie:3.4.1'

    implementation 'me.imid.swipebacklayout.lib:library:1.3.0'


    //智能刷新
    implementation 'com.scwang.smart:refresh-layout-kernel:2.0.1'      //核心必须依赖
    implementation 'com.scwang.smart:refresh-header-classics:2.0.1'    //经典刷新头
    implementation 'com.scwang.smart:refresh-footer-ball:2.0.1'        //球脉冲加载
    implementation 'com.scwang.smart:refresh-footer-classics:2.0.1'    //经典加载


    //极光认证
    implementation 'cn.jiguang.sdk:jverification:2.6.5'  // 此处以2.6.4 版本为例。
    implementation 'cn.jiguang.sdk:jcore:2.5.1'  // 此处以JCore 2.3.4 版本为例。

    //极光统计
    implementation 'cn.jiguang.sdk:janalytics:2.1.2' // 此处以JAnalytics 2.1.0 版本为例。

    //必须使用
    implementation dependenciesLib.okgo

    //以下三个选择添加，okrx和okrx2不能同时使用
    implementation dependenciesLib.okrx2
    //implementation dependenciesLib.okserver

    //事件总线
    implementation dependenciesLib.eventbus

    //butterknife注解
    implementation dependenciesLib.butterknife
    kapt dependenciesLib.butterknife_compiler


    implementation("org.jetbrains.anko:anko:$anko_version") {
        exclude module: 'support-v4'
    }


    //动态申请权限
    implementation 'com.github.tbruyelle:rxpermissions:0.12'

    implementation dependenciesLib.rxjava
    implementation dependenciesLib.rxandroid



    implementation dependenciesLib.gson
    testImplementation dependenciesLib.gson


    implementation dependenciesLib.picture_library


    implementation dependenciesLib.glide
    kapt dependenciesLib.glide_compiler   //注解处理器


    //阿里云对象存储
    implementation dependenciesLib.aliyun_oss
    implementation dependenciesLib.squareup_okio


    // 阿里ARouter依赖  Replace with the latest version
    //阿里ARouter框架
    implementation 'com.alibaba:arouter-api:1.5.0'
    //    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2'
    kapt  'com.alibaba:arouter-compiler:1.2.2'



    //事件总线live-event-bus取代 Rxbus 和 EventBus
    implementation 'com.jeremyliao:live-event-bus-x:1.7.2'


    // 国际化：https://github.com/getActivity/MultiLanguages
    // 悬浮窗：https://github.com/getActivity/XToast
    // 工具类：https://github.com/Blankj/AndroidUtilCode
    // 平板适配：https://github.com/JessYanCoding/AndroidAutoSize
    // 轮播图：https://github.com/bingoogolapple/BGABanner-Android
    // 二维码：https://github.com/bingoogolapple/BGAQRCode-Android
    // 跑马灯：https://github.com/sunfusheng/MarqueeView
    // 第三方支付：https://github.com/Cuieney/RxPay
    // Log 打印：https://github.com/JakeWharton/timber
    // 图片裁剪：https://github.com/Yalantis/uCrop
    // 图片压缩：https://github.com/Curzibn/Luban
    // 对象存储：https://github.com/leavesC/DoKV
    // 对象注解：https://www.jianshu.com/p/f1f888e4a35f
}
