apply plugin: 'com.android.application'
//通用配置引入
apply from: '../commonConfig.gradle'
//数据库greendao
apply plugin: 'org.greenrobot.greendao' // apply plugin
//apply plugin 'com.zbc.plugin.plugin.test'


android {
    compileSdkVersion android.targetSdkVersion
    defaultConfig {
        applicationId "com.zbc.androideasydevelopment"
        minSdkVersion android.minSdkVersion
        targetSdkVersion android.targetSdkVersion
        versionCode android.versionCode
        versionName android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //方法过多google提供的分包解决方案   参考 https://yq.aliyun.com/articles/12429
        multiDexEnabled true

        //添加如下配置就OK了
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
        //版本名后面添加一句话，意思就是flavor dimension 它的维度就是该版本号，这样维度就是都是统一的了
        flavorDimensions "versionCode"
        manifestPlaceholders = [CHANNEL_NAME: "channel_name"]
    }

    signingConfigs {
        debug {
            storeFile file(signingDebug.storeFile)
            storePassword signingDebug.storePassword
            keyAlias signingDebug.keyAlias
            keyPassword signingDebug.keyPassword
        }

        release {
            storeFile file(signingRelease.storeFile)
            storePassword signingRelease.storePassword
            keyAlias signingRelease.keyAlias
            keyPassword signingRelease.keyPassword
        }

    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "TOAST_DEBUG", "true"

            //王松一电脑
            buildConfigField "String", "HOST_SERVICE", "\"http://192.168.1.96:8800/ZtscApp/Service\""
            buildConfigField "String", "HOST_SERVICE_DOC", "\"http://192.168.1.96:8800/ZtscApp\""
            buildConfigField "String", "HOST_SERVICE_MAP", "\"http://192.168.1.96:8800/PropertyPC/Service\""
            buildConfigField "String", "HOST_SERVICE_POI_SELECT", "\"http://39.96.6.55:8080\""
            buildConfigField "String", "HOST_SERVICE_TOPIC", "\"http://39.96.6.55:7080/pub-app-service/topic/\""
            buildConfigField "String", "HOST_SERVICE_STORE", "\"http://39.96.6.55:7080/pub-app-service/store/\""
            buildConfigField "String", "HOST_SERVICE_PROPERTY", "\"http://47.94.12.253:8080/prop-service/Service\""
            //阿里服务获取ossToken
            buildConfigField "String", "HOST_SERVICE_OSSTOKEN", "\"http://39.96.6.55:7080/pub-app-service/oss/getStsToken\""

            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
            // proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //signingConfig signingConfigs.
            signingConfig signingConfigs.debug
        }
        release {
            //加载默认混淆配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            //替换版本正式的上线主机地址

            buildConfigField "String", "HOST_SERVICE", "\"http://www.correctmap.com.cn/pub-service/Service\""
            buildConfigField "String", "HOST_SERVICE_DOC", "\"http://www.correctmap.com.cn/pub-service\""
            buildConfigField "String", "HOST_SERVICE_MAP", "\"http://www.correctmap.com.cn/prop-service/Service\""
            buildConfigField "String", "HOST_SERVICE_POI_SELECT", "\"http://39.96.6.55:8080\""
            buildConfigField "String", "HOST_SERVICE_TOPIC", "\"http://www.correctmap.com.cn/pub-app-service/topic/\""
            buildConfigField "String", "HOST_SERVICE_STORE", "\"http://www.correctmap.com.cn/pub-app-service/store/\""
            buildConfigField "String", "HOST_SERVICE_PROPERTY", "\"http://www.correctmap.com.cn/prop-service/Service\""
            //阿里服务获取ossToken
            buildConfigField "String", "HOST_SERVICE_OSSTOKEN", "\"http://www.correctmap.com.cn/pub-app-service/oss/getStsToken\""
            debuggable true
            //混淆
            minifyEnabled false

            //Zipalign优化
            // zipAlignEnabled true
            // 移除无用的resource文件
            // shrinkResources true
            //日志开关
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "boolean", "TOAST_DEBUG", "true"
        }
    }
    repositories {
        flatDir {
            dirs 'libs', 'amap'
        }
    }
    packagingOptions {
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
    sourceSets {
        main {
            //jni库的调用会到资源文件夹下libs里面找so文件
            jniLibs.srcDirs = ['libs', 'amap']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }




    productFlavors {
//        zheng_tu_pub {}
//        _91store {}
//        _360 {}
        baidu {}
        /*   xiaomi {}
      wandoujia {}
      yingyongbao {}
     coolchuan {}
         anzhi {}
         huawei {}
         samsung {}

         anzhuo {}
         vivo {}
         oppo {}
         lenovo {}
         meizu {}
         jinli {}
         tianyi {}
         yidongMM {}
         mumayi {}*/
        productFlavors.all {
            flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }
    }

    // 自定义输出配置，这里我们加上APK版本号1.0
    applicationVariants.all { variant ->
        variant.outputs.all { output -> // each 改为 all
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                // 输出apk名称为wooyun_v1.0_wandoujia.apk
                def fileName = "beautifulLife_v${defaultConfig.versionName}_${variant.productFlavors[0].name}_${variant.buildType.signingConfig.name}.apk"
                // File file = new File(outputFile.parent, "build/outputs/apk/relaseApks")
                File file = new File(outputFile.parent)
                if (!file.exists()) {
                    file.mkdirs()
                }
                outputFileName = fileName  //  output.outputFile 改为 outputFileName
            }
        }
    }

    //核心数据库配置
    greendao {
        //schemaVersion 7 //数据库版本号
        schemaVersion android.minSdkVersion //数据库版本号
        daoPackage 'com.ztsc.prop.propuser.db'// 设置DaoMaster、DaoSession、Dao 包名
        targetGenDir 'src/main/java'//设置DaoMaster、DaoSession、Dao目录
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation dependenciesLib.appcompat_v7
    implementation dependenciesLib.recyclerview
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    //https://github.com/orhanobut/logger
    implementation 'com.orhanobut:logger:2.2.0'
    //数据库 GreenDao
    implementation 'org.greenrobot:greendao:3.2.2'

    implementation project(':baseRecyclerViewHelperlibrary')
    implementation project(':statusBarLibrary')
    implementation project(':commonutils')
    implementation project(':refresh-layout')
    implementation project(':observableScrollView')
    implementation project(':circleimageview')
    implementation dependenciesLib.rxjava
    implementation dependenciesLib.rxandroid
    implementation 'com.tencent.bugly:crashreport:2.6.6.1'
    implementation 'com.youth.banner:banner:1.4.10'

    implementation dependenciesLib.butterknife
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation dependenciesLib.gson
    //加密
//    implementation 'com.blankj:utilcode:1.4.1'
    //方法过多google提供的分包解决方案   参考 https://yq.aliyun.com/articles/12429   和  http://blog.csdn.net/gulihui890411/article/details/48551551
    implementation dependenciesLib.multidex
    implementation dependenciesLib.okhttp
}
